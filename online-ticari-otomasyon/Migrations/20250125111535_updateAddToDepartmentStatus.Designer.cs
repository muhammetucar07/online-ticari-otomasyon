// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using online_ticari_otomasyon.Models.Class;

#nullable disable

namespace online_ticari_otomasyon.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250125111535_updateAddToDepartmentStatus")]
    partial class updateAddToDepartmentStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("AdminUserName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Varchar");

                    b.Property<string>("Authorize")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("Varchar");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.HasKey("CategoryID");

                    b.ToTable("Categoriess");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Current", b =>
                {
                    b.Property<int>("CurrentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurrentID"));

                    b.Property<string>("CurrentCity")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("Varchar");

                    b.Property<string>("CurrentEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<string>("CurrentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("CurrentSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.HasKey("CurrentID");

                    b.ToTable("Currents");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCity")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<string>("EmployeeImage")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar");

                    b.Property<string>("EmployeeJob")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Expenses", b =>
                {
                    b.Property<int>("ExpensesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpensesID"));

                    b.Property<decimal>("ExpensesAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ExpensesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpensesInfo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<string>("ExpensesName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.HasKey("ExpensesID");

                    b.ToTable("Expensess");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.InvoiceItem", b =>
                {
                    b.Property<int>("InvoiceItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceItemID"));

                    b.Property<int>("InvoiceItemAmount")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceItemDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<string>("InvoiceItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InvoiceItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InvoiceItemTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoicesInvoiceID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceItemID");

                    b.HasIndex("InvoicesInvoiceID");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Invoices", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceDeliverer")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("InvoiceReceiver")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<string>("InvoiceSequenceNumber")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("Varchar");

                    b.Property<string>("InvoiceSerialNo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("Char");

                    b.Property<DateTime>("InvoiceTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxOffice")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("Varchar");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoicess");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<short>("Stock")
                        .HasColumnType("smallint");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Sales", b =>
                {
                    b.Property<int>("SalesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CurrentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("SalesClient")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<string>("SalesProduct")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SalesID");

                    b.HasIndex("CurrentID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductID");

                    b.ToTable("Saless");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Employee", b =>
                {
                    b.HasOne("online_ticari_otomasyon.Models.Class.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.InvoiceItem", b =>
                {
                    b.HasOne("online_ticari_otomasyon.Models.Class.Invoices", "Invoices")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoicesInvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Product", b =>
                {
                    b.HasOne("online_ticari_otomasyon.Models.Class.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Sales", b =>
                {
                    b.HasOne("online_ticari_otomasyon.Models.Class.Current", "Current")
                        .WithMany("Saless")
                        .HasForeignKey("CurrentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_ticari_otomasyon.Models.Class.Employee", "Employee")
                        .WithMany("Saless")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("online_ticari_otomasyon.Models.Class.Product", "Product")
                        .WithMany("Saless")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Current");

                    b.Navigation("Employee");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Current", b =>
                {
                    b.Navigation("Saless");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Employee", b =>
                {
                    b.Navigation("Saless");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Invoices", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("online_ticari_otomasyon.Models.Class.Product", b =>
                {
                    b.Navigation("Saless");
                });
#pragma warning restore 612, 618
        }
    }
}
